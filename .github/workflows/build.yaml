name: Build
on:
  push:
  pull_request:

jobs:

  build:
    name: Build, check and publish package on release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - uses: actions/setup-python@v2
    - name: Build package
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
        poetry install
        poetry build
    - name: Attach packages to workflow run for later inspection and debugging
      uses: actions/upload-artifact@v2
      with:
        name: mpm-python-packages
        path: ./dist/*
    - name: Validates package metadata
      run: |
        poetry check
        poetry run twine check ./dist/*
        poetry run check-wheel-contents ./dist/*.whl
    - name: Extract version
      id: get_version
      run: echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}
    - name: Create a release on GitHub
      # Only triggers on version tagging.
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/*
        body: |
          üêç [Available on PyPi](https://pypi.org/project/meta-package-manager/${{ steps.get_version.outputs.TAG_VERSION }}/).

          Changelog:

            * <TODO>
            * <TODO>
            * <TODO>

    - name: Push package to public PyPi repository
      # Only triggers on version tagging.
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@v1.2.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
    - name: Test post-release version bump
      run: |
        poetry run bumpversion --verbose patch
