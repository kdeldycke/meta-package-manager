---
name: Docs
"on":
  push:
    # Only targets main branch to avoid amplification effects of auto-fixing
    # the exact same stuff in multiple non-rebased branches.
    branches:
      - main

jobs:

  docs:
    uses: kdeldycke/workflows/.github/workflows/docs.yaml@v0.6.1

  documentation:
    name: Generate Sphinx doc and create a PR
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.3.1
      - name: Install Sphinx
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry install --no-interaction --no-ansi
      - name: Run Sphinx
        run: |
          poetry run sphinx-apidoc -f -o ./docs .
      - uses: peter-evans/create-pull-request@v3.12.0
        with:
          assignees: ${{ github.actor }}
          commit-message: "[autofix] Update Sphinx apidoc"
          title: "[autofix] Update Sphinx apidoc"
          body: >
            <details><summary><code>Workflow metadata</code></summary>


            > [Auto-generated on run `#${{ github.run_id }}`](${{ github.event.repository.html_url }}/actions/runs/${{
            github.run_id }}) by `${{ github.job }}` job from [`docs.yaml`](${{ github.event.repository.html_url
            }}/blob/${{ github.sha }}/.github/workflows/docs.yaml) workflow.


            </details>
          labels: "ðŸ“— documentation"
          branch: update-doc

  deploy-docs:
    name: Deploy Sphinx doc
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.3.1
        with:
          # XXX Force Python 3.9 to not have 3.10 as default.
          # Waiting for boltons > 21.0.0 to be released with upstreamed
          # Python 3.10 fix: https://github.com/mahmoud/boltons/issues/294
          python-version: "3.9"
      - name: Install Sphinx
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          # Let sphinx-click access project's code to generate CLI help.
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi
      - name: Build documentation
        run: |
          poetry run sphinx-build -b html ./docs ./docs/html
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html
          force_orphan: true

  dependency-graph:
    name: Update dependency image and create a PR
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.3.1
      - name: Install pipdeptree
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry install --no-interaction --no-ansi
          sudo apt install graphviz
      - name: Run pipdeptree
        run: >
          poetry run pipdeptree --packages meta-package-manager
          --graph-output png > ./docs/images/dependencies.png
      - uses: peter-evans/create-pull-request@v3.12.0
        # Only triggers on version tagging.
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          assignees: ${{ github.actor }}
          commit-message: "[autofix] Regenerate dependency graph"
          title: "[autofix] Regenerate dependency graph"
          body: >
            <details><summary><code>Workflow metadata</code></summary>


            > [Auto-generated on run `#${{ github.run_id }}`](${{ github.event.repository.html_url }}/actions/runs/${{
            github.run_id }}) by `${{ github.job }}` job from [`docs.yaml`](${{ github.event.repository.html_url
            }}/blob/${{ github.sha }}/.github/workflows/docs.yaml) workflow.


            </details>
          labels: "ðŸ“¦ dependencies, ðŸ“— documentation"
          branch: update-deps-image
