name: Lint
on:
  push:
    # QA on master is too late: we shouldn't mess with the code at this point.
    branches-ignore:
      - 'master'
  pull_request:

jobs:

  format-python:
    name: Auto-format Python code and create a PR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
      with:
        # Required by git-auto-commit-action. See:
        # https://github.com/stefanzweifel/git-auto-commit-action#checkout-the-correct-branch
        ref: ${{ github.head_ref }}
    - uses: actions/setup-python@v2
    - name: Install black
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
        poetry install
    - name: Run black
      run: |
        poetry run black .
    - uses: peter-evans/create-pull-request@v2.8.1
      with:
        author: "Kevin Deldycke <kevin@deldycke.com>"
        commit-message: "[lint] Format Python code."
        title: "Format Python code"
        body: >
          [Auto-generated on run #${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          as defined by [workflow action](https://github.com/${{ github.repository }}/blob/develop/.github/workflows/lint.yaml).
        labels: "CI/CD"
        assignees: kdeldycke
        branch: format-python

  lint-python:
    name: Lint and check Python code
    # No need to lint before the auto formatting did its job.
    needs: format-python
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - uses: actions/setup-python@v2
    - name: Install linters
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
        poetry install
    - name: Lint
      run: |
        poetry run pycodestyle
        poetry run pylint meta_package_manager

  lint-yaml:
    name: Lint YAML files
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - uses: actions/setup-python@v2
    - name: Install linter
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
        poetry install
    - name: Lint
      run: |
        poetry run yamllint -d relaxed .

  lint-json:
    name: Lint JSON files and create a PR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Install linter
      run: |
        sudo npm install jsonlint -g
    - name: Lint
      run: |
        find ./ -type f -name '*.json' -print -exec jsonlint --in-place "{}" \;
    - name: Create PR
      uses: peter-evans/create-pull-request@v2.8.1
      with:
        author: "Kevin Deldycke <kevin@deldycke.com>"
        commit-message: "[lint] Auto-format JSON content."
        title: '[lint] Auto-format JSON content'
        body: >
          [Auto-generated on run #${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          as defined by [workflow action](https://github.com/${{ github.repository }}/blob/develop/.github/workflows/lint.yaml).
        labels: "CI/CD"
        assignees: kdeldycke
        branch: lint-json

  fix-typo:
    name: Auto-fix typos and create a PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - uses: sobolevn/misspell-fixer-action@0.1.0
      - uses: peter-evans/create-pull-request@v2.8.1
        with:
          author: "Kevin Deldycke <kevin@deldycke.com>"
          commit-message: "[lint] Fix typo."
          title: "Typo"
          body: >
            [Auto-generated on run #${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            as defined by [workflow action](https://github.com/${{ github.repository }}/blob/develop/.github/workflows/lint.yaml).
          labels: "documentation"
          assignees: kdeldycke
          branch: fix-typo

  update-actions:
    name: Upgrade GitHub Actions and create a PR
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0
    - name: Install actions updater
      run: |
        cd ~ && wget https://github.com/fabasoad/ghacu/releases/download/v1.1.4/ghacu-1.1.4-linux-x64.tgz
        tar -xvf ghacu-1.1.4-linux-x64.tgz
        chmod +x ~/ghacu-1.1.4-linux-x64/ghacu
        PATH=$PATH:~/ghacu-1.1.4-linux-x64
        echo "::set-env name=PATH::$PATH"
    - uses: actions/checkout@v2.3.1
    - name: Update actions
      run: ghacu --upgrade
    - uses: peter-evans/create-pull-request@v2.8.1
      with:
        token: ${{ secrets.WORKFLOW_VERSION_UPDATE_TOKEN }}
        author: "Kevin Deldycke <kevin@deldycke.com>"
        commit-message: "Update GitHub Actions."
        title: "Update GitHub Actions"
        body: >
          [Auto-generated on run #${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          as defined by [workflow action](https://github.com/${{ github.repository }}/blob/develop/.github/workflows/lint.yaml).
        labels: "CI/CD"
        assignees: kdeldycke
        branch: update-actions

  update-gitignore:
    name: Generate .gitignore and create a PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Install git-extras package
        run: |
          sudo apt install -y git-extras
      - name: Generate .gitignore
        run: |
          git ignore-io --replace emacs git linux macos nohup python vim virtualenv visualstudiocode windows
          echo 'poetry.lock' >> ./.gitignore
      - uses: peter-evans/create-pull-request@v2.8.1
        with:
          author: "Kevin Deldycke <kevin@deldycke.com>"
          commit-message: "Regenerate .gitignore"
          title: "Regenerate .gitignore"
          body: >
            [Auto-generated on run #${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            as defined by [workflow action](https://github.com/${{ github.repository }}/blob/develop/.github/workflows/lint.yaml).
          labels: "CI/CD"
          assignees: kdeldycke
          branch: update-gitignore

  update-mailmap:
    name: Update .mailmap and create a PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
        with:
          # Fetch all history to extract all contributors.
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - name: Generate .mailmap
        run: |
          python ./.github/update_mailmap.py
      - uses: peter-evans/create-pull-request@v2.8.1
        with:
          author: "Kevin Deldycke <kevin@deldycke.com>"
          commit-message: "Regenerate .mailmap"
          title: "Regenerate .mailmap"
          body: >
            [Auto-generated on run #${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            as defined by [workflow action](https://github.com/${{ github.repository }}/blob/develop/.github/workflows/lint.yaml).
          labels: "CI/CD"
          assignees: kdeldycke
          branch: update-mailmap
