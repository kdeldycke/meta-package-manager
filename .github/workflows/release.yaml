---
name: Build & release
"on":
  # Target are chosen so that all commits get a chance to have their build tested.
  push:
    branches:
      - main
  pull_request:

jobs:

  win-arm64-build-test:
    runs-on: windows-11-arm
    steps:
      - name: Install build dependencies for lxml
        run: |
          choco install libxml2 libxslt -y
          choco install visualcpp-build-tools -y
      - uses: actions/checkout@v4.2.2
      # XXX We use setup-python to install ARM64 flavor of Python on Windows because uv does not support it yet:
      # https://github.com/astral-sh/python-build-standalone/issues/386
      # https://github.com/Nuitka/Nuitka/issues/3449#issuecomment-2889794114
      - uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.10"
          architecture: arm64
      - name: Install uv
        run: |
          python -m pip install -r https://raw.githubusercontent.com/kdeldycke/workflows/v4.16.5/requirements/uv.txt
      - name: Build binary
        run: >
          uv run
          --with-requirements https://raw.githubusercontent.com/kdeldycke/workflows/v4.16.5/requirements/nuitka.txt
          --
          nuitka --onefile --assume-yes-for-downloads --output-filename=mpm-windows-arm64-build-test.exe
          meta_package_manager/__main__.py
      - name: Upload binaries
        uses: actions/upload-artifact@v4.6.2
        with:
          name: mpm-windows-arm64-build-test.exe
          if-no-files-found: error
          path: mpm-windows-arm64-build-test.exe

  release:
    uses: kdeldycke/workflows/.github/workflows/release.yaml@v4.16.5
    secrets:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    with:
      timeout: 300